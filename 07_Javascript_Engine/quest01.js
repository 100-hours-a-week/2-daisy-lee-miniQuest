/* [Javascript Engine 동작 방식]

1. 자바스크립트 엔진이 코드를 처음 읽어 들여 준비하는 과정 (사전 파싱)
2. 자바스크립트 엔진은 코드의 각 요소(변수, 이름, 키워드, 연산자 등)를 토큰화하여 해석 가능한 형태로 나눔
3. 자바스크립트 엔진이 토큰을 바탕으로 코드 구조를 트리 형태로 변환하여 추상 구문 트리(AST)를 만듦
4. 함수 호출 혹은 전역 코드가 실행될 경우, 자바스크립트 엔진은 실행 컨텍스트를 생성
5. 자바스크립트는 렉시컬 환경이기 때문에 렉시컬 스코프를 사용하는데, 실행되는 위치가 아니라 선언된 위치를 기준으로 스코프가 정해지는 것임
6. 인터프리터가 코드를 실행하기 전에 변수나 함수 선언을 읽고 재배치한 후 최상단에 위치(호이스팅)시키고, 실제 물리적인 이동이 아니라 자바스크립트 엔진이 코드를 해석하기 위해 시행함
7. 이전에 설정된 구조와 환경을 바탕으로 실제 코드를 실행하게 되는데, 먼저 AST를 기반으로 바이트 코드로 변환시킴
8. 실행 시 선언되지 않은 변수가 발견될 경우 자바스크립트 엔진은 스코프 체인을 통해 상위 컨텍스트에서 변수를 찾는 과정을 거침 (전역 스코프에 도달하거나 찾을 때까지 반복)

// 대부분 노션 교재를 참고하며 적었습니다.. 더 공부해서 보지 않고 설명할 수 있게 만들게요.!

*/